# Using a specific version for reproducibility
FROM arm64v8/php:8.2-fpm

# Setting default shell to bash for better scripting support
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Install system dependencies
RUN apt-get update -yqq \
    && apt-get install -yqq --no-install-recommends \
    apt-utils \
    gnupg2 \
    libpng-dev \
    libwebp-dev \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    libpq-dev \
    git \
    libicu-dev \
    libzip-dev \
    zip \
    unzip \
    inetutils-ping \
    && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp \
    && docker-php-ext-install -j$(nproc) gd \
    && docker-php-ext-install bcmath exif pcntl intl \
    && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \
    && docker-php-ext-install pgsql pdo_pgsql \
    && docker-php-ext-configure zip \
    && docker-php-ext-install zip

# Install xDebug
RUN pecl install xdebug-3.2.2

# Enable xDebug
# RUN docker-php-ext-enable xdebug # we will enable it via xdebug.ini zend_extension=xdebug.so

# Copy php.ini
COPY ./php.ini /usr/local/etc/php/

# Copy xdebug.ini
# COPY ./xdebug.ini /usr/local/etc/php/conf.d/

# Install Redis extension
RUN pecl install -o -f redis \
    && docker-php-ext-enable redis

# Clean up temporary files
RUN rm -rf /tmp/pear

# Configure locale
ARG LOCALE=POSIX
ENV LC_ALL ${LOCALE}

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Set proper shell as entry point
ENTRYPOINT ["/bin/bash", "-c"]

# Expose ports for artisan serve
EXPOSE 9000
